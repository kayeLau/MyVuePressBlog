(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{522:function(s,a,t){s.exports=t.p+"assets/img/jwt.517bd5f9.jpg"},559:function(s,a,t){"use strict";t.r(a);var e=t(6),o=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[e("img",{attrs:{src:t(522),alt:"session-token"}})]),s._v(" "),e("h2",{attrs:{id:"cookie-based-authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-based-authentication"}},[s._v("#")]),s._v(" cookie-based Authentication")]),s._v(" "),e("p",[s._v("因為http請求是無狀態的,為了解決重複錄登錄及身份驗證的問題,最傳統的解決方法就是cookie-based Authentication。通過比對客戶端回傳的session id,判斷該用戶的狀態。在這種情況下,每個用只要保存自己的 session id ,但服務器則要保存所有人的 session id，对于服務器是巨大的開销；另一方面也限制了服務器的擴展能力，请求轉發到另一台机器時，没有session id又要从原機器做复制保存。")]),s._v(" "),e("h3",{attrs:{id:"cookie"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[s._v("#")]),s._v(" cookie")]),s._v(" "),e("p",[s._v("cookie是由服務器生成并發给客戶端的，在下次請求時会會把 cookie 发给服務器。Cookies 保存在客户端，主要内容包括：名字，值，過期時間，路徑等等。")]),s._v(" "),e("h3",{attrs:{id:"session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[s._v("#")]),s._v(" session")]),s._v(" "),e("p",[s._v("Session 是在服务器端保存用户數據,用作標識用戶身份之用。客戶端第一次发送请求时，服務器自动生成了 Session ID 并将其包裹在Cookies中发送到客戶端。當客戶端再次請求時就可以一并發送,服务器會會從Cookies中提取Session ID并進行配對。")]),s._v(" "),e("h2",{attrs:{id:"cookie-based服务器验证暴露的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cookie-based服务器验证暴露的问题"}},[s._v("#")]),s._v(" cookie-based服务器验证暴露的问题")]),s._v(" "),e("h3",{attrs:{id:"服務器壓力"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服務器壓力"}},[s._v("#")]),s._v(" 服務器壓力")]),s._v(" "),e("p",[s._v("服務器要保存所有人的 session id，对于服務器是巨大的開销")]),s._v(" "),e("h3",{attrs:{id:"擴展性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#擴展性"}},[s._v("#")]),s._v(" 擴展性")]),s._v(" "),e("p",[s._v("當用戶向其他服務器發請求時,Seesion ID又需要遷移到其他服務器")]),s._v(" "),e("h3",{attrs:{id:"csrf攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csrf攻击"}},[s._v("#")]),s._v(" CSRF攻击")]),s._v(" "),e("p",[s._v("cookie是由服務器生成并發送給客戶端的,意味如果有人在中間截獲你的cookie就可以冒充你向服務器發請求,有可能會引發安全問題。這種"),e("strong",[s._v("攻击者盗用了你的身份，以你的名义发送请求")]),s._v("的攻擊行為我們稱之為Cross-site-request forgery(CSRF)。從服务器来看你與攻擊者都是同一人,攻擊者可以輕易地用你的名义发送邮件、发消息等。但在今天各種框架與瀏覽器的約束下,受CSRF攻擊的機險非常低。")]),s._v(" "),e("h2",{attrs:{id:"token-based-authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#token-based-authentication"}},[s._v("#")]),s._v(" Token-based Authentication")]),s._v(" "),e("p",[s._v("token的意思是“令牌”，是一種基於算法與數位簽名的用戶身份的驗證管道。原理是登入後服務器通過算法對用戶數據生成一個簽名，把簽名和數據一起作為token發給用戶端，並且不保存token，下次請求發過來的時候，和token中簽名對比相同則驗證成功。在瀏覽器上,常以JSON方式傳送token,即JSON Web token。JWT由三部分組成，這些部分由點（"),e("code",[s._v(".")]),s._v("）分隔，分別是：header﹑payload﹑signature\n因此，JWT形式通常如下所示。")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("xxxxx.yyyyy.zzzzz\n")])])]),e("h3",{attrs:{id:"header"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#header"}},[s._v("#")]),s._v(" Header")]),s._v(" "),e("p",[s._v("header"),e("em",[s._v("通常")]),s._v("由兩部分組成:令牌的類型和所使用的簽名算法，例如HMAC SHA256或RSA。然後，此JSON被"),e("strong",[s._v("Base64Url")]),s._v("編碼以形成JWT的第一部分。")]),s._v(" "),e("h3",{attrs:{id:"payload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#payload"}},[s._v("#")]),s._v(" payload")]),s._v(" "),e("p",[s._v("payload包含聲明。聲明通常是有關實體（通常是用戶）和其他數據的聲明。然後對payload進行"),e("strong",[s._v("Base64Url")]),s._v("編碼，以形成JSON Web令牌的第二部分。")]),s._v(" "),e("h3",{attrs:{id:"signature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#signature"}},[s._v("#")]),s._v(" signature")]),s._v(" "),e("p",[s._v("簽名用於驗證消息在此過程中沒有更改，並且對於使用私鑰進行簽名的令牌，它還可以驗證JWT的發送者是它所說的真實身份。")])])}),[],!1,null,null,null);a.default=o.exports}}]);